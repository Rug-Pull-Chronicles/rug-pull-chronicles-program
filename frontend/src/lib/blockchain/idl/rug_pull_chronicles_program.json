{
  "address": "Fhpi7Xfc6eYZxy5ENLeW4vmRbkWfNZpeFC4Btiqf7sR8",
  "metadata": {
    "name": "rug_pull_chronicles_program",
    "version": "0.1.0",
    "spec": "0.1.0",
    "description": "Created with Anchor"
  },
  "instructions": [
    {
      "name": "add_collection_royalties",
      "discriminator": [11, 255, 82, 131, 16, 0, 47, 188],
      "accounts": [
        {
          "name": "admin",
          "docs": ["The admin who can add collection royalties"],
          "writable": true,
          "signer": true
        },
        {
          "name": "config",
          "docs": ["The program's config account"],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [99, 111, 110, 102, 105, 103]
              },
              {
                "kind": "account",
                "path": "config.seed",
                "account": "Config"
              }
            ]
          }
        },
        {
          "name": "collection",
          "docs": ["The collection to update"],
          "writable": true
        },
        {
          "name": "update_authority_pda",
          "docs": ["The program's update authority PDA"],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [117, 112, 100, 95, 97, 117, 116, 104]
              }
            ]
          }
        },
        {
          "name": "mpl_core_program",
          "address": "CoREENxT6tW1HoK8ypY1SxRMZTcVPm7R94rH4PZNhX7d"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "basis_points",
          "type": "u16"
        },
        {
          "name": "creators",
          "type": {
            "vec": {
              "defined": {
                "name": "CreatorInput"
              }
            }
          }
        }
      ]
    },
    {
      "name": "add_freeze_delegate",
      "discriminator": [98, 47, 75, 227, 16, 123, 72, 112],
      "accounts": [
        {
          "name": "user",
          "docs": [
            "The user adding the freeze delegate plugin - must be the owner of the asset"
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "config",
          "docs": ["The program's config account"],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [99, 111, 110, 102, 105, 103]
              },
              {
                "kind": "account",
                "path": "config.seed",
                "account": "Config"
              }
            ]
          }
        },
        {
          "name": "asset",
          "docs": ["The NFT to add the freeze delegate to"],
          "writable": true
        },
        {
          "name": "owner",
          "docs": [
            "The owner of the asset - must sign the transaction",
            "This is required for Owner Managed Plugins like Freeze Delegate"
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "collection",
          "docs": ["The collection the asset belongs to"],
          "writable": true
        },
        {
          "name": "update_authority_pda",
          "docs": ["The program's update authority PDA"],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [117, 112, 100, 95, 97, 117, 116, 104]
              }
            ]
          }
        },
        {
          "name": "mpl_core_program",
          "address": "CoREENxT6tW1HoK8ypY1SxRMZTcVPm7R94rH4PZNhX7d"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "frozen",
          "type": "bool"
        },
        {
          "name": "delegate",
          "type": {
            "option": "pubkey"
          }
        }
      ]
    },
    {
      "name": "create_collection",
      "discriminator": [156, 251, 92, 54, 233, 2, 16, 82],
      "accounts": [
        {
          "name": "collection",
          "writable": true,
          "signer": true
        },
        {
          "name": "update_authority",
          "optional": true
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "mpl_core_program",
          "address": "CoREENxT6tW1HoK8ypY1SxRMZTcVPm7R94rH4PZNhX7d"
        },
        {
          "name": "config",
          "docs": ["Config account to store the collection address"],
          "writable": true
        }
      ],
      "args": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "uri",
          "type": "string"
        },
        {
          "name": "max_supply",
          "type": {
            "option": "u32"
          }
        },
        {
          "name": "edition_name",
          "type": {
            "option": "string"
          }
        },
        {
          "name": "edition_uri",
          "type": {
            "option": "string"
          }
        }
      ]
    },
    {
      "name": "freeze_asset",
      "discriminator": [91, 253, 207, 2, 6, 105, 80, 236],
      "accounts": [
        {
          "name": "delegate",
          "docs": ["The authorized delegate who can freeze the asset"],
          "writable": true,
          "signer": true
        },
        {
          "name": "config",
          "docs": ["The program's config account"],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [99, 111, 110, 102, 105, 103]
              },
              {
                "kind": "account",
                "path": "config.seed",
                "account": "Config"
              }
            ]
          }
        },
        {
          "name": "asset",
          "docs": ["The NFT to freeze"],
          "writable": true
        },
        {
          "name": "collection",
          "docs": ["The collection the asset belongs to"],
          "writable": true
        },
        {
          "name": "mpl_core_program",
          "address": "CoREENxT6tW1HoK8ypY1SxRMZTcVPm7R94rH4PZNhX7d"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "initialize",
      "discriminator": [175, 175, 109, 31, 13, 152, 155, 237],
      "accounts": [
        {
          "name": "admin",
          "docs": ["The payer for all PDAs and collection-mint accounts"],
          "writable": true,
          "signer": true
        },
        {
          "name": "config",
          "docs": ["Our on-chain config record"],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [99, 111, 110, 102, 105, 103]
              },
              {
                "kind": "arg",
                "path": "seed"
              }
            ]
          }
        },
        {
          "name": "update_authority_pda",
          "docs": ["PDA that will become update_authority on both collections"],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [117, 112, 100, 95, 97, 117, 116, 104]
              }
            ]
          }
        },
        {
          "name": "treasury_pda",
          "docs": ["General‐ops treasury PDA"],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [116, 114, 101, 97, 115, 117, 114, 121]
              }
            ]
          }
        },
        {
          "name": "anti_scam_treasury_pda",
          "docs": ["Anti‐scam treasury PDA"],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  116, 114, 101, 97, 115, 117, 114, 121, 95, 97, 110, 116, 105,
                  95, 115, 99, 97, 109
                ]
              }
            ]
          }
        },
        {
          "name": "mpl_core_program",
          "address": "CoREENxT6tW1HoK8ypY1SxRMZTcVPm7R94rH4PZNhX7d"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "seed",
          "type": "u64"
        },
        {
          "name": "bumps",
          "type": {
            "defined": {
              "name": "BumpSeeds"
            }
          }
        }
      ]
    },
    {
      "name": "mint_scammed_nft",
      "discriminator": [77, 171, 233, 77, 142, 112, 139, 221],
      "accounts": [
        {
          "name": "user",
          "writable": true,
          "signer": true
        },
        {
          "name": "rugged_nft_mint",
          "writable": true,
          "signer": true
        },
        {
          "name": "update_authority_pda",
          "docs": ["Required to sign when adding an asset to a collection"],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [117, 112, 100, 95, 97, 117, 116, 104]
              }
            ]
          }
        },
        {
          "name": "scammed_collection",
          "docs": [
            "The scammed collection account",
            "When adding an asset to a collection, the collection becomes the asset's update authority"
          ],
          "writable": true
        },
        {
          "name": "treasury",
          "docs": ["Treasury account for collecting platform fees"],
          "writable": true
        },
        {
          "name": "antiscam_treasury",
          "docs": ["Anti-scam treasury for collecting donation fees"],
          "writable": true
        },
        {
          "name": "mint_tracker",
          "docs": [
            "Simple tracker to prevent duplicate mints - acts as a flag"
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  109, 105, 110, 116, 95, 116, 114, 97, 99, 107, 101, 114
                ]
              },
              {
                "kind": "account",
                "path": "rugged_nft_mint"
              }
            ]
          }
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "mpl_core_program",
          "address": "CoREENxT6tW1HoK8ypY1SxRMZTcVPm7R94rH4PZNhX7d"
        },
        {
          "name": "config",
          "docs": ["Config account to store the collection address"],
          "writable": true
        }
      ],
      "args": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "uri",
          "type": "string"
        },
        {
          "name": "scam_details",
          "type": "string"
        }
      ]
    },
    {
      "name": "mint_standard_nft",
      "discriminator": [126, 0, 75, 71, 46, 198, 125, 128],
      "accounts": [
        {
          "name": "user",
          "writable": true,
          "signer": true
        },
        {
          "name": "rugged_nft_mint",
          "writable": true,
          "signer": true
        },
        {
          "name": "update_authority_pda",
          "docs": ["Required to sign when adding an asset to a collection"],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [117, 112, 100, 95, 97, 117, 116, 104]
              }
            ]
          }
        },
        {
          "name": "standard_collection",
          "docs": [
            "The standard collection account",
            "When adding an asset to a collection, the collection becomes the asset's update authority"
          ],
          "writable": true
        },
        {
          "name": "treasury",
          "docs": ["Treasury account for collecting platform fees"],
          "writable": true
        },
        {
          "name": "antiscam_treasury",
          "docs": ["Anti-scam treasury for collecting donation fees"],
          "writable": true
        },
        {
          "name": "mint_tracker",
          "docs": [
            "Simple tracker to prevent duplicate mints - acts as a flag"
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  109, 105, 110, 116, 95, 116, 114, 97, 99, 107, 101, 114
                ]
              },
              {
                "kind": "account",
                "path": "rugged_nft_mint"
              }
            ]
          }
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "mpl_core_program",
          "address": "CoREENxT6tW1HoK8ypY1SxRMZTcVPm7R94rH4PZNhX7d"
        },
        {
          "name": "config",
          "docs": ["Config account to store the collection address"],
          "writable": true
        }
      ],
      "args": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "uri",
          "type": "string"
        },
        {
          "name": "scam_year",
          "type": "string"
        },
        {
          "name": "usd_amount_stolen",
          "type": "string"
        },
        {
          "name": "platform_category",
          "type": "string"
        },
        {
          "name": "type_of_attack",
          "type": "string"
        }
      ]
    },
    {
      "name": "thaw_asset",
      "discriminator": [118, 63, 80, 239, 236, 22, 140, 125],
      "accounts": [
        {
          "name": "delegate",
          "docs": ["The authorized delegate who can thaw the asset"],
          "writable": true,
          "signer": true
        },
        {
          "name": "config",
          "docs": ["The program's config account"],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [99, 111, 110, 102, 105, 103]
              },
              {
                "kind": "account",
                "path": "config.seed",
                "account": "Config"
              }
            ]
          }
        },
        {
          "name": "asset",
          "docs": ["The NFT to thaw"],
          "writable": true
        },
        {
          "name": "collection",
          "docs": ["The collection the asset belongs to"],
          "writable": true
        },
        {
          "name": "mpl_core_program",
          "address": "CoREENxT6tW1HoK8ypY1SxRMZTcVPm7R94rH4PZNhX7d"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "toggle_paused",
      "discriminator": [54, 83, 147, 198, 123, 97, 218, 72],
      "accounts": [
        {
          "name": "admin",
          "docs": ["The admin that can update the config"],
          "signer": true
        },
        {
          "name": "config",
          "docs": ["The config account to update"],
          "writable": true
        }
      ],
      "args": []
    },
    {
      "name": "update_config_collection",
      "discriminator": [73, 181, 47, 161, 15, 67, 58, 149],
      "accounts": [
        {
          "name": "admin",
          "docs": ["The admin that can update the config"],
          "signer": true
        },
        {
          "name": "config",
          "docs": ["The config account to update"],
          "writable": true
        }
      ],
      "args": [
        {
          "name": "collection_address",
          "type": "pubkey"
        }
      ]
    },
    {
      "name": "update_config_rugged_collection",
      "discriminator": [3, 49, 241, 228, 169, 217, 24, 136],
      "accounts": [
        {
          "name": "admin",
          "docs": ["The admin that can update the config"],
          "signer": true
        },
        {
          "name": "config",
          "docs": ["The config account to update"],
          "writable": true
        }
      ],
      "args": [
        {
          "name": "collection_address",
          "type": "pubkey"
        }
      ]
    },
    {
      "name": "update_fee_settings",
      "discriminator": [155, 121, 178, 253, 181, 139, 103, 177],
      "accounts": [
        {
          "name": "admin",
          "docs": ["The admin that can update the config"],
          "signer": true
        },
        {
          "name": "config",
          "docs": ["The config account to update"],
          "writable": true
        }
      ],
      "args": [
        {
          "name": "mint_fee_basis_points",
          "type": "u16"
        },
        {
          "name": "treasury_fee_percent",
          "type": "u8"
        },
        {
          "name": "antiscam_fee_percent",
          "type": "u8"
        }
      ]
    },
    {
      "name": "update_minimum_payment",
      "discriminator": [149, 223, 226, 175, 142, 150, 214, 194],
      "accounts": [
        {
          "name": "admin",
          "docs": ["The admin that can update the config"],
          "signer": true
        },
        {
          "name": "config",
          "docs": ["The config account to update"],
          "writable": true
        }
      ],
      "args": [
        {
          "name": "minimum_payment",
          "type": "u64"
        }
      ]
    }
  ],
  "accounts": [
    {
      "name": "Config",
      "discriminator": [155, 12, 170, 224, 30, 250, 204, 130]
    },
    {
      "name": "MintTracker",
      "discriminator": [217, 230, 22, 187, 250, 88, 11, 174]
    }
  ],
  "errors": [
    {
      "code": 6000,
      "name": "InvalidFeeDistribution",
      "msg": "The provided fee distribution is invalid. Treasury and anti-scam fee percentages must sum to 100"
    },
    {
      "code": 6001,
      "name": "InvalidFeeAmount",
      "msg": "The provided fee amount is too high. Maximum allowed is 50%"
    },
    {
      "code": 6002,
      "name": "InvalidMinimumPayment",
      "msg": "The provided minimum payment is too low. Minimum allowed is 0.01 SOL"
    },
    {
      "code": 6003,
      "name": "ArithmeticOverflow",
      "msg": "Arithmetic operation resulted in overflow"
    },
    {
      "code": 6004,
      "name": "OperationNotAllowedWhenPaused",
      "msg": "The requested operation cannot be performed when the program is paused"
    }
  ],
  "types": [
    {
      "name": "BumpSeeds",
      "docs": ["Bumps for the PDAs created in the initialize instruction"],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "config",
            "type": "u8"
          },
          {
            "name": "update_authority_pda",
            "type": "u8"
          },
          {
            "name": "treasury_pda",
            "type": "u8"
          },
          {
            "name": "anti_scam_treasury_pda",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "Config",
      "docs": [
        "Holds all of the \"global\" PDAs for Rug Pull Chronicles:",
        "– update authority",
        "– fee treasuries",
        "– collection details",
        "",
        "admin authority"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "admin",
            "docs": [
              "Admin authority that can update config and create collections"
            ],
            "type": "pubkey"
          },
          {
            "name": "seed",
            "docs": ["Seed used to generate the config PDA"],
            "type": "u64"
          },
          {
            "name": "update_authority_bump",
            "docs": ["bump seed for the `upd_auth` PDA"],
            "type": "u8"
          },
          {
            "name": "treasury_bump",
            "docs": ["bump seed for the general-ops treasury PDA"],
            "type": "u8"
          },
          {
            "name": "antiscam_treasury_bump",
            "docs": ["bump seed for the anti-scam treasury PDA"],
            "type": "u8"
          },
          {
            "name": "standard_collection_bump",
            "docs": ["bump seed for standard_collection"],
            "type": "u8"
          },
          {
            "name": "scammed_collection_bump",
            "docs": ["bump seed for scammed_collection"],
            "type": "u8"
          },
          {
            "name": "config_bump",
            "docs": ["Config account's own bump"],
            "type": "u8"
          },
          {
            "name": "update_authority",
            "docs": ["PDA that becomes MPL-Core's update authority"],
            "type": "pubkey"
          },
          {
            "name": "treasury",
            "docs": ["Where we collect platform fees"],
            "type": "pubkey"
          },
          {
            "name": "antiscam_treasury",
            "docs": ["Where we send anti-scam donations"],
            "type": "pubkey"
          },
          {
            "name": "standard_collection",
            "docs": ["The standard collection mint address"],
            "type": "pubkey"
          },
          {
            "name": "scammed_collection",
            "docs": ["The rugged collection mint address"],
            "type": "pubkey"
          },
          {
            "name": "mint_fee_basis_points",
            "docs": ["Mint fee in basis points (e.g., 500 = 5%)"],
            "type": "u16"
          },
          {
            "name": "treasury_fee_percent",
            "docs": ["Percentage of fee that goes to treasury (0-100)"],
            "type": "u8"
          },
          {
            "name": "antiscam_fee_percent",
            "docs": [
              "Percentage of fee that goes to anti-scam treasury (0-100)"
            ],
            "type": "u8"
          },
          {
            "name": "minimum_payment",
            "docs": ["Minimum payment required for minting (in lamports)"],
            "type": "u64"
          },
          {
            "name": "paused",
            "docs": [
              "Circuit breaker flag to pause all functionality in case of emergencies"
            ],
            "type": "bool"
          },
          {
            "name": "total_minted_standard",
            "docs": ["Total number of standard NFTs minted"],
            "type": "u64"
          },
          {
            "name": "total_minted_scammed",
            "docs": ["Total number of scammed NFTs minted"],
            "type": "u64"
          },
          {
            "name": "version",
            "docs": ["Program version for tracking upgrades"],
            "type": "u16"
          },
          {
            "name": "standard_collection_has_master_edition",
            "docs": [
              "Flag indicating if standard collection has Master Edition plugin"
            ],
            "type": "bool"
          },
          {
            "name": "standard_collection_max_supply",
            "docs": [
              "Max supply for standard collection (if Master Edition plugin applied)"
            ],
            "type": {
              "option": "u32"
            }
          },
          {
            "name": "scammed_collection_has_master_edition",
            "docs": [
              "Flag indicating if scammed collection has Master Edition plugin"
            ],
            "type": "bool"
          },
          {
            "name": "scammed_collection_max_supply",
            "docs": [
              "Max supply for scammed collection (if Master Edition plugin applied)"
            ],
            "type": {
              "option": "u32"
            }
          }
        ]
      }
    },
    {
      "name": "CreatorInput",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "address",
            "type": "pubkey"
          },
          {
            "name": "percentage",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "MintTracker",
      "docs": [
        "Simple tracker to prevent duplicate minting of NFTs",
        "Instead of storing redundant information, we just use this as a",
        "flag to indicate that an NFT mint has already been processed"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "is_minted",
            "docs": ["Flag indicating this mint has been processed"],
            "type": "bool"
          }
        ]
      }
    }
  ],
  "constants": [
    {
      "name": "RUGGED_NFT_SEED",
      "type": "bytes",
      "value": "[114, 117, 103, 103, 101, 100, 95, 110, 102, 116]"
    }
  ]
}
